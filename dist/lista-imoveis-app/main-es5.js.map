{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/imovel/imovel.component.html","webpack:///src/app/imovel/imovel.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/menu/menu.service.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/imoveis/imoveis.component.html","webpack:///src/app/imoveis/imoveis.component.ts","webpack:///src/app/api.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","ImovelComponent","router","route","_api","isLoadingResults","zoom","id","snapshot","paramMap","get","getImoveis","subscribe","data","imovel","lat","lng","AppComponent","title","MenuComponent","menu","queryField","set","value","inputChange","AppModule","forRoot","apiKey","MenuService","search","change","term","emit","FooterComponent","routes","path","component","AppRoutingModule","relativeLinkResolution","ImoveisComponent","imoveis$","cidade","city","filter","toLowerCase","includes","httpOptions","headers","apiUrl","ApiService","http","url","pipe","_","console","log","handleError","operation","result","error","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\n  <div class=\"container\" *ngIf=imovel>\n    <div class=\"imovel-detalhes\">\n      <img src=\"{{ imovel.image }}\" height=350 width=470 alt=\"apartamento\">\n      <img src=\"{{ imovel.image }}\" height=350 width=470 alt=\"apartamento\">\n      <img src=\"{{ imovel.image }}\" height=350 width=470 alt=\"apartamento\">\n      <img src=\"{{ imovel.image }}\" height=350 width=470 alt=\"apartamento\">\n    </div>\n    <div>\n      <div class=\"properties-title\">\n        {{imovel.title}}\n      </div>\n    </div>\n    <div class=\"properties-feature-address\">\n      <span>\n        {{imovel.address}},\n      </span>\n      <span>\n        {{imovel.number}},\n      </span>\n      <span>\n        {{imovel.neighborhood}},\n      </span>\n      <span>\n        {{imovel.city}}\n      </span>\n    </div>\n    <div class=\"properties-features\">\n      <span class=\"properties-features-bedrooms\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Quantidade Dormitórios\">bed</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          {{imovel.bedrooms}} quartos\n        </span>\n        <span>\n          ({{imovel.suites}} suíte)\n        </span>\n      </span>\n      <span class=\"properties-features-details\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Quantidade de vaga\">drive_eta</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          {{imovel.parkingSlots}} vaga\n        </span>\n      </span>\n      <span class=\"properties-features-details\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Quantidade de banheiro\">bathroom</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          {{imovel.bathrooms}} banheiros\n        </span>\n      </span>\n      <span class=\"properties-features-details\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Quantidade de banheiro\">pets</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          aceita pet\n        </span>\n      </span>\n      <span class=\"properties-features-details\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"número do andar\">apartment</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          {{imovel.floor}}&ordm; andar\n        </span>\n      </span>\n    </div>\n    <div class=\"properties-features\">\n      <span class=\"properties-features-bedrooms\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"número do andar\">apartment</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\" *ngIf=\"imovel.forRent\">\n          aluguel\n        </span>\n      </span>\n\n      <span class class=\"properties-features-details\" *ngIf=\"imovel.forSale\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Quantidade de vaga\">apartment</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          {{imovel.parkingSlots}} vaga\n        </span>\n      </span>\n      <span class=\"properties-features-details\" *ngIf=\"!imovel.hasElevator\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Quantidade de banheiro\">apartment</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          sem elevavador\n        </span>\n      </span>\n      <span class=\"properties-features-details\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Quantidade de banheiro\">architecture</mat-icon>\n        <span class=\"properties-features-bedrooms-quantity\">\n          {{imovel.totalArea}} m²\n        </span>\n      </span>\n    </div>\n    <div>\n    </div>\n    <div class=\"properties-features-price\">\n      <div class=\"properties-features-price-rent\">\n        Aluguel {{imovel.rentValue | currency: 'BRL'}}\n      </div>\n      <div class=\"properties-features-price-condominiumValue\">\n        <span>\n          Condomíno: {{imovel.condominiumValue | currency: 'BRL'}}\n        </span>\n      </div>\n      <div class=\"properties-features-price-total\">\n        Total {{imovel.totalCost | currency: 'BRL'}}\n      </div>\n    </div>\n    <div class=\"properties-features-map\">\n      <agm-map class=\"properties-features-map\" [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n        <agm-marker [latitude]=\"lat\" [longitude]=\"lng\"></agm-marker>\n      </agm-map>\n    </div>\n    <div>\n      <a class=\"back-actions\" routerLink=\"/\" mat-raised-button color=\"primary\">Voltar</a>\n    </div>\n  </div>\n</div>\n","import { ApiService } from './../api.service';\nimport { Imovel } from './../../model/imovel';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { nullSafeIsEquivalent } from '@angular/compiler/src/output/output_ast';\nimport { Observable } from 'rxjs';\nimport { AgmMap } from '@agm/core';\n@Component({\n  selector: 'app-imoveis',\n  templateUrl: './imovel.component.html',\n  styleUrls: ['./imovel.component.scss'],\n})\nexport class ImovelComponent implements OnInit {\n  @Input() imovel: Imovel;\n\n\n  isLoadingResults = true;\n  lat: number;\n  lng: number;\n  zoom: number = 12;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private _api: ApiService,\n\n\n  ) {}\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this._api.getImoveis().subscribe((data) => {\n      this.imovel = data[id];\n      this.lat = data[id].lat;\n      this.lng = data[id].lng;\n    });\n\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'lista-imoveis-app';\n}\n","<div class=\"container\" style=\"height: 100%;\">\n  <app-menu></app-menu>\n  <router-outlet></router-outlet>\n  <app-footer></app-footer>\n</div>\n","import { MenuService } from './menu.service';\nimport { ApiService } from './../api.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ImovelComponent } from '../imovel/imovel.component';\nimport { Imovel } from 'src/model/imovel';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent implements OnInit {\n  @Input() imovel: Imovel;\n  @Input() ImovelComponent: ImovelComponent;\n  queryField = new FormControl();\n  constructor(private _api: ApiService, private menu: MenuService, private route: ActivatedRoute,) {}\n  ngOnInit() {\n\n  }\n  // onSearch() {\n  //   console.log(this.queryField.value);\n  //   console.log(this._api.getImoveis());\n  //   console.log(this.imovel);\n  // }\n  inputChange() {\n    this.menu.set(this.queryField.value);\n  }\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <img class=\"logo\" src=\"../../assets/images/logo_itau.png\" alt=\"logo itau\">\n  <span>Lista de Imóveis</span>\n  <div>\n    <mat-form-field>\n      <input matInput type=\"search\" [formControl]=\"queryField\" placeholder=\"Buscar por cidade\" class=\"search-input\"\n        (input)=\"inputChange()\">\n    </mat-form-field>\n    <button mat-icon-button color=\"black\" aria-label=\" icon button with a search icon\">\n      <mat-icon>search</mat-icon>\n    </button>\n  </div>\n</mat-toolbar>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ImoveisComponent } from './imoveis/imoveis.component';\nimport { ImovelComponent } from './imovel/imovel.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MenuService } from './menu/menu.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { AgmCoreModule } from '@agm/core';\nimport { FooterComponent } from './footer/footer.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImoveisComponent,\n    ImovelComponent,\n    MenuComponent,\n    FooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatGridListModule,\n    LayoutModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAzXuCKDTcmcLSQvvK6PpNTMr4Xw_GnO_c',\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [MenuService, HttpClientModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable, Output, EventEmitter } from '@angular/core';\n\n@Injectable()\nexport class MenuService {\n  search: string = '';\n\n  @Output() change: EventEmitter<string> = new EventEmitter();\n\n  set(term: string) {\n    this.search = term;\n    this.change.emit(this.search);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n  <div class=\"container\">\n    <div class=\"content has-text-centered\">\n      <p>\n        Made with <3 by <a href=\"#\">Mario Tadakuma Neto</a>\n      </p>\n    </div>\n  </div>\n</footer>\n","import { Imovel } from './../model/imovel';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ImoveisComponent } from './imoveis/imoveis.component';\nimport { ImovelComponent } from './imovel/imovel.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ImoveisComponent,\n    data: { title: 'Lista de Imoveis' },\n  },\n  {\n    path: 'imoveis/:id',\n    component: ImovelComponent,\n    data: { title: 'Detalhes do Imovel' },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<div class=\"list-card-properties\">\n  <div *ngFor=\"let imovel of imoveis$; index as i\">\n    <mat-card routerLink=\"/imoveis/{{i}}\" class=\"card-properties\">\n      <img mat-card-image src=\"{{ imovel.image }}\" alt=\"apartamento\">\n      <mat-card-content class=\"lista\">\n        <div>\n          <span class=\"card-properties-type\">\n            {{imovel.type}}\n          </span>\n          <span class=\"card-properties-address\">\n            {{imovel.address}}\n          </span>\n        </div>\n        <div class=\"card-properties-neighborhood\">\n          <span>\n            {{imovel.neighborhood}},\n          </span>\n          <span>\n            {{imovel.city}}\n          </span>\n        </div>\n        <div class=\"card-properties-features\">\n          <span class=\"card-properties-features-bedrooms\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Qtde Dormitórios\">bed</mat-icon>\n            <span class=\"card-properties-features-bedrooms-quantity\">\n              {{imovel.bedrooms}}\n            </span>\n          </span>\n          <span class=\"card-properties-features-area\">\n            <mat-icon aria-hidden=\"false\" aria-label=\"Metragem\">architecture</mat-icon>\n            {{imovel.totalArea}} m²\n          </span>\n\n        </div>\n        <div class=\"card-properties-price\">\n          <div class=\"card-properties-price-rent\">\n            Aluguel {{imovel.rentValue | currency: 'BRL'}}\n          </div>\n          <div class=\"card-properties-price-total\">\n            Total {{imovel.totalCost | currency: 'BRL'}}\n          </div>\n        </div>\n      </mat-card-content>\n      <mat-card-actions>\n        <a class=\"details-actions\" routerLink=\"/imoveis/{{i}}\" mat-raised-button color=\"primary\">ver detalhes</a>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","import { Imovel } from './../../model/imovel';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { MenuService } from '../menu/menu.service';\n\n@Component({\n  selector: 'app-imoveis',\n  templateUrl: './imoveis.component.html',\n  styleUrls: ['./imoveis.component.scss'],\n})\nexport class ImoveisComponent implements OnInit {\n\n  @Input() imovel: Imovel;\n  imoveis$: Imovel[] = [];\n  cidade: string;\n  search: string;\n  constructor(private _api: ApiService, private menu: MenuService) {}\n\n  ngOnInit() {\n    this._api.getImoveis().subscribe((data) => {\n      this.imoveis$ = data;\n      this.cidade = this.imoveis$[0].city;\n    });\n    this.menu.change.subscribe((search) => {\n      this.search = search;\n      this._api.getImoveis().subscribe((data) => {\n        this.imoveis$ = data.filter((imovel) => {\n          return imovel.city.toLowerCase().includes(this.search.toLowerCase());\n        });\n      });\n    });\n  }\n}\n","import { Imovel } from './../model/imovel';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport {\n  HttpClient,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\nconst apiUrl = 'http://localhost:3000/data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  getImoveis() {\n    return this.http.get<Imovel[]>(`${apiUrl}`);\n  }\n\n\n\n  getImovel(id: number): Observable<Imovel> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get<Imovel>(url).pipe(\n      tap((_) => console.log(`leu o imovel id=${id}`)),\n      catchError(this.handleError<Imovel>(`getimovel id=${id}`))\n    );\n  }\n\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n\n      return of(result as T);\n    };\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}